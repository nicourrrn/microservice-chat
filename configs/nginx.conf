events {
    worker_connections 4096;
}


http {
    
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    gzip on;

    server {
        listen 80;
        listen [::]:80;
        
        root /etc/nginx/html;
        server_name service.me;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        if ($request_method = OPTIONS) {
            return 200;
        }

        location ~ ^/ws/(.*)$ {
            resolver 127.0.0.11 ipv6=off;

            proxy_pass http://messages:8000/$1;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location ~ ^/msg/(.*)$ {
            resolver 127.0.0.11 ipv6=off;


            set $target http://messages:8000;
            
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real_IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;


            proxy_pass $target/$1;
        }

        location ~ ^/auth/(.*)$ {
            resolver 127.0.0.11 ipv6=off;

            set $target http://auth:3000;

            proxy_set_header Host $host;
            proxy_set_header X-Real_IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_pass $target/$1;
        }
    }
}
